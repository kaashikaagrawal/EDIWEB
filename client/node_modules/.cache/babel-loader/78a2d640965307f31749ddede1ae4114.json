{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  cart: cartReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst middleware = [thunk];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Kaashika/BTech-III/WebTechno/PROJECT/my-app/client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","cartReducer","reducer","productList","cart","cartItemsFromStorage","localStorage","getItem","JSON","parse","middleware","initialState","cartItems","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SAASC,kBAAT,QAAmC,4BAAnC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,MAAMC,OAAO,GAAGN,eAAe,CAAC;AAC9BO,EAAAA,WAAW,EAAEH,kBADiB;AAE9BI,EAAAA,IAAI,EAAEH;AAFwB,CAAD,CAA/B;AAKA,MAAMI,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,UAAU,GAAG,CAACZ,KAAD,CAAnB;AAEA,MAAMa,YAAY,GAAG;AACnBP,EAAAA,IAAI,EAAE;AACJQ,IAAAA,SAAS,EAAEP;AADP;AADa,CAArB;AAMA,MAAMQ,KAAK,GAAGlB,WAAW,CACvBO,OADuB,EAEvBS,YAFuB,EAGvBZ,mBAAmB,CAACF,eAAe,CAAC,GAAGa,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeG,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { productListReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  cart: cartReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : [];\n\nconst middleware = [thunk];\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n  },\n};\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}